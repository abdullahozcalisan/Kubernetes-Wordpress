apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: test
  name: mysql-pv-claim
  labels:
    tier: test
    app: mysql
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: test
  name: wp-pv-claim
  labels:
    tier: test  
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: test
  name: wordpress
  labels:
    tier: test  
    app: wordpress
spec:
  selector:
    matchLabels:
      tier: test
      app: wordpress
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        tier: test
        app: wordpress
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - mysql
            topologyKey: kubernetes.io/hostname
      containers:
      - image: wordpress:5.6
        name: wordpress
        resources:
          limits:
            memory: "256M"
            cpu: "0.5"        
        env:
        - name: WORDPRESS_DB_HOST
          value: mysql-svc         
        - name: WORDPRESS_DB_USER
          valueFrom:
            secretKeyRef:
              name: mysql-test-secret
              key: MYSQL_USER              
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-test-secret
              key: MYSQL_PASSWORD
        - name: WORDPRESS_DB_NAME
          valueFrom:
            secretKeyRef:
              name: mysql-test-secret
              key: MYSQL_DATABASE              
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wp-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  namespace: test
  name: wordpress
  labels:
    tier: test  
    app: wordpress  
spec:
  selector:
    tier: test  
    app: wordpress
  ports:
  - port: 80
    targetPort: 80          

---
apiVersion: v1
kind: Service
metadata:
  namespace: test
  name: mysql-svc
  labels:
    tier: test  
    app: mysql  
spec:
  selector:
    tier: test  
    app: mysql
  ports:
  - port: 3306
    targetPort: 3306  

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: test
  name: wordpress-mysql
  labels:
    tier: test  
    app: mysql
spec:
  selector:
    matchLabels:
      tier: test    
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        tier: test        
        app: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        resources:
          limits:
            memory: "1Gi"
            cpu: "250m"
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-test-secret
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: mysql-test-secret
              key: MYSQL_DATABASE
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-test-secret
              key: MYSQL_USER              
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-test-secret
              key: MYSQL_PASSWORD              
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim    